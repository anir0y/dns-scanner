name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*' # Trigger on new tags (e.g., v1.0.0)

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23' # Specify your Go version here

      # Step 3: Validate go.mod
      - name: Validate go.mod
        run: go mod tidy

      # Step 4: Build binaries for multiple platforms
      - name: Build binaries
        run: |
          mkdir dist
          GOOS=windows GOARCH=amd64 go build -o dist/dns-scanner-windows-amd64.exe main.go
          GOOS=linux GOARCH=amd64 go build -o dist/dns-scanner-linux-amd64 main.go
          GOOS=darwin GOARCH=amd64 go build -o dist/dns-scanner-macos-amd64 main.go
          GOOS=darwin GOARCH=arm64 go build -o dist/dns-scanner-macos-arm64 main.go

      # Step 5: Create a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Step 6: Upload binaries to the Release
      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dns-scanner-windows-amd64.exe
          asset_name: dns-scanner-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dns-scanner-linux-amd64
          asset_name: dns-scanner-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS x64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dns-scanner-macos-amd64
          asset_name: dns-scanner-macos-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dns-scanner-macos-arm64
          asset_name: dns-scanner-macos-arm64
          asset_content_type: application/octet-stream